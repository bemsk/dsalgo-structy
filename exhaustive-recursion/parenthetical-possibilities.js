/*
Write a function, parentheticalPossibilities, that takes in a string as an argument.
The function should return an array containing all of the strings
that could be generated by expanding all parentheses of the string into its possibilities.

For example, the possibilities for 'x(mn)yz' are 'xmyz', 'xnyz'.
*/

const parentheticalPossibilities = (s) => {
    if (s.length === 0) return ['']

    const first = s[0]

    if (first !== '(') {
        return parentheticalPossibilities(s.slice(1)).map((r) => first + r)
    }

    const options = []
    let i = 1
    while (s[i] !== ')') {
        options.push(s[i])
        i++
    }

    let result = []

    const rest = parentheticalPossibilities(s.slice(i + 1))
    for (let opt of options) {
        result = result.concat(rest.map((r) => opt + r))
    }

    return result
}

module.exports = parentheticalPossibilities